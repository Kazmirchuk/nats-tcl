# Copyright (c) 2020 Petro Kazmirchuk https://github.com/Kazmirchuk

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

namespace import ::tcltest::*

test_utils::startNats NATS --user myname --pass dummy_password

test auth-1 "Connect to NATS using login/password in URL" -body {
    set conn [nats::connection new]
    $conn configure -servers nats://myname:dummy_password@localhost:4222
    $conn connect
    $conn subscribe subject1 -callback test_utils::simpleCallback
    $conn publish subject1 "hello user"
    vwait test_utils::simpleMsg
    $conn destroy
    set test_utils::simpleMsg
} -result {hello user}

test auth-2 "Connect to NATS using login/password in options" -body {
    set conn [nats::connection new]
    $conn configure -servers nats://localhost:4222 -user myname -password dummy_password
    $conn connect
    $conn subscribe subject1 -callback test_utils::simpleCallback
    $conn publish subject1 "hello again"
    vwait test_utils::simpleMsg
    $conn destroy
    set test_utils::simpleMsg
} -result {hello again}

test_utils::stopNats NATS

test_utils::startNats NATS --auth 12345
test auth-3 "Connect to NATS using an authentication token in URL" -body {
    set conn [nats::connection new]
    $conn configure -servers nats://12345@localhost:4222
    $conn connect
    $conn subscribe subject1 -callback test_utils::simpleCallback
    $conn publish subject1 "hello token"
    vwait test_utils::simpleMsg
    $conn destroy
    set test_utils::simpleMsg
} -result {hello token}

test auth-4 "Connect to NATS using an authentication token in options" -body {
    set conn [nats::connection new]
    puts stderr [$conn configure --help]
    $conn configure -servers nats://localhost:4222 -token 12345
    $conn connect
    $conn subscribe subject1 -callback test_utils::simpleCallback
    $conn publish subject1 "hello token2"
    vwait test_utils::simpleMsg
    $conn destroy
    set test_utils::simpleMsg
} -result {hello token2}

$conn destroy
test_utils::stopNats NATS
cleanupTests
