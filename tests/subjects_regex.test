# Copyright (c) 2020 Petro Kazmirchuk https://github.com/Kazmirchuk

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

namespace import ::tcltest::*
tcltest::configure {*}$argv

set subjectRegex {^[[:alnum:]_-]+$}

proc CheckSubject {subj} {
    if {[string length $subj] == 0} {
        return false
    }
    foreach token [split $subj .] {
        if {![regexp -- $::subjectRegex $token]} {
            return false
        }
    }
    return true
}

proc CheckWildcard {subj} {
    if {[string length $subj] == 0} {
        return false
    }
    foreach token [split $subj .] {
        if {[regexp -- $::subjectRegex $token] || $token == "*" || $token == ">" } {
            continue
        }
        return false
    }
    return true
}

test regex-1 "Check exact subjects" -body {
    # these are valid
    assert {[CheckSubject foo]}
    assert {[CheckSubject FOO.ba_r]}
    assert {[CheckSubject foo1.bAr2.ba-z]}
    # these are invalid
    assert {![CheckSubject ""]}
    assert {![CheckSubject .]}
    assert {![CheckSubject foo..bar]}
    assert {![CheckSubject "foo. .bar"]}
    assert {![CheckSubject "fOo. bar"]}
    assert {![CheckSubject fo*o]}
    assert {![CheckSubject foo.]}
} -result {}

test regex-2 "Check subjects with wildcards" -body {
    assert {[CheckWildcard foo.*]}
    assert {[CheckWildcard foo.bar]}
    assert {[CheckWildcard foo]}
    assert {[CheckWildcard foo.>]}
    assert {[CheckWildcard *.foo.*]}
    # invalid wildcards
    assert {![CheckWildcard foo*]}
    assert {![CheckWildcard foo>]}
    assert {![CheckWildcard foo.*bar]}
    assert {![CheckWildcard *foo.*]}
} -result {}

cleanupTests
