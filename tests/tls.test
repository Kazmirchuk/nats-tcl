# Copyright (c) 2020-2023 Petro Kazmirchuk https://github.com/Kazmirchuk

# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and  limitations under the License.

# Test summary:
# - connect to NATS with TLS
# - provide a client TLS certificate

# useful links about TclTLS:
# https://core.tcl-lang.org/tcltls/wiki/Documentation
# https://www.magicsplat.com/blog/tcltls/

source test_utils.tcl

set tls_failed [catch {package require tls}]
set certs_present [file isdirectory cert]
tcltest::testConstraint tls [expr {!$tls_failed && $certs_present}]

# due to a bug in TclTLS, SAN in the server's certificate is not checked https://core.tcl-lang.org/tcltls/tktview/3c42b2ba11
# it also doesn't pass checks at badssl.com : https://core.tcl-lang.org/tcltls/tktview/9773973cfc

# my certificates are self-signed and not known by the system, so Tcl should reject them
test tls-1.1 "Try connecting to NATS without CA" -constraints tls -setup {
    cd cert
    startNats NATS --tlscert=server-cert.pem --tlskey=server-key.pem
    set conn [nats::connection new TLS_NATS -log_chan [tcltest::outputChannel]]
    $conn configure -servers localhost:4222
} -body {
    $conn connect
} -result {*certificate verify failed*} -match glob -errorCode {NATS ErrTLS}

test tls-1.2 "Connect to NATS using CA" -constraints tls -body {
    $conn configure -tls_opts {-cafile rootCA.pem}
    $conn connect
    assert { [dict get [$conn server_info] tls_required]} 1
    $conn cget -status
} -result $nats::status_connected -cleanup {
    $conn disconnect
    $conn reset -tls_opts
    stopNats NATS
}

test tls-2.1 "Connect to NATS with client verification" -constraints tls -setup {
    startNats NATS --tlsverify --tlscert=server-cert.pem --tlskey=server-key.pem --tlscacert=rootCA.pem
} -body {
    $conn configure -tls_opts {-cafile rootCA.pem -certfile client-cert.pem -keyfile client-key.pem}
    $conn connect
    assert {[dict get [$conn server_info] tls_verify]} 1
    $conn cget -status
} -result $nats::status_connected -cleanup {
    $conn disconnect
    $conn reset -tls_opts
}

test tls-2.2 "Connect to NATS with client verification - failed" -constraints tls -body {
    $conn configure -tls_opts {-cafile rootCA.pem}
    catch {$conn connect} err errOpts
    # depending on Windows/Linux and Tcl/TLS patch version I get either ErrTLS or ErrBrokenSocket
    set errCode [lindex [dict get $errOpts -errorcode] 1]
    assert {$errCode eq "ErrTLS" || $errCode eq "ErrBrokenSocket"}
    # in either case, NATS server will log "client didn't provide a certificate"
} -cleanup {
    $conn reset -tls_opts
    stopNats NATS
}

test tls-3.1 "Connect to NATS without TLS" -constraints tls -setup {
    startNats NATS
} -body {
    # explicit TLS scheme in the URL means that client will require TLS from NATS
    # or you can specify secure=true in "configure"
    $conn configure -servers tls://localhost:4222 -tls_opts {-cafile rootCA.pem}
    $conn connect
} -result {Server localhost:4222 does not provide TLS} -errorCode {NATS ErrSecureConnWanted} -cleanup {
    stopNats NATS
    cd ..
    $conn destroy
}
cleanupTests
